# This is a basic workflow to help you get started with Actions

name: PR
permissions:
  contents: read
  packages: write

on:
  pull_request:
    branches:
      - main

jobs:
  scan:
    name: Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure
        id: config
        run: |
          PROJ_VERSION=$(cat VERSION)
          VERSION=$(cat VERSION)
          echo "VERSION=$(echo $VERSION)" >> $GITHUB_OUTPUT
          echo "VERSION=$(echo $VERSION)" >> $GITHUB_ENV

      - name: "Build image with tag ${{ env.VERSION }}"
        id: build
        uses: aevea/action-kaniko@v0.14.0
        with:
          tag: ${{ env.VERSION }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: ghcr.io

      - name: Scan Image
        uses: anchore/scan-action@v3
        id: scan
        with:
          image: ghcr.io/aaheiev/iac:${{ env.VERSION }}
          output-format: sarif
          fail-build: false

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'

#
#      - name: Build
#        id: build
#        run: |
#          echo "build version ${{ env.VERSION }}"
#
#      - name: "Build image with tag ${{ env.VERSION }}"
#        id: build
#        uses: aevea/action-kaniko@v0.14.0
#        with:
#          tag: ${{ env.VERSION }}
#          username: ${{ github.actor }}
#          password: ${{ secrets.GITHUB_TOKEN }}
#          registry: ghcr.io

#      - name: Run Trivy vulnerability scanner in fs mode
#        uses: aquasecurity/trivy-action@0.28.0
#        with:
#          scan-type: 'fs'
#          scan-ref: '.'
#          trivy-config: trivy.yaml
